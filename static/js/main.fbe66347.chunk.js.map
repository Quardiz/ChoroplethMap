{"version":3,"sources":["components/choropleth_chart/data.js","components/choropleth_chart/choroplet.js","index.js"],"names":["data","Chloroplet","props","this","drawChart","w","immigration_numbers","reduce","prev","curr","projection","d3","scale","center","translate","h","colorScale","domain","d","parseInt","replace","range","svg","refs","chartHolder","append","attr","text","selectAll","europe_geo","features","enter","properties","geounit","temp","immigrationHelper","rectWidth","Math","ceil","legendScale","legendSteps","legendAxis","ticks","legendData","Array","keys","map","i","call","id","ref","target","href","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbe66347.chunk.js","sourcesContent":["export const data = [\r\n    ['Belgium', '137,860'],\r\n    ['Bulgaria', '29,559'],\r\n    ['Czech Republic', '65,910'],\r\n    ['Denmark', '64,669'],\r\n    ['Germany', '893,886'],\r\n    ['Estonia', '17,547'],\r\n    ['Ireland', '97,712'],\r\n    ['Greece', '119,489'],\r\n    ['Spain', '643,684'],\r\n    ['France', '386,911'],\r\n    ['Croatia', '26,029'],\r\n    ['Italy', '332,324'],\r\n    ['Cyprus', '23,442'],\r\n    ['Latvia', '10,909'],\r\n    ['Lithuania', '28,914'],\r\n    ['Luxembourg', '24,644'],\r\n    ['Hungary', '82,937'],\r\n    ['Malta', '26,444'],\r\n    ['Netherlands', '194,306'],\r\n    ['Austria', '105,633'],\r\n    ['Poland', '214,083'],\r\n    ['Portugal', '43,170'],\r\n    ['Romania', '172,578'],\r\n    ['Slovenia', '28,455'],\r\n    ['Slovakia', '7,253'],\r\n    ['Finland', '31,106'],\r\n    ['Sweden', '132,602'],\r\n    ['United Kingdom', '603,953'],\r\n    ['Iceland', '11,830'],\r\n    ['Liechtenstein', '649'],\r\n    ['Norway', '47,864'],\r\n    ['Switzerland', '144,857']\r\n];","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport {event as currentEvent} from 'd3';\r\nimport {data} from './data'\r\nimport europe_geo from './europe_geo.json'\r\nimport './choroplet.css';\r\n\r\nexport default class Chloroplet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        const w = 1000;\r\n        const h = 900;\r\n\r\n        const immigration_numbers = data.reduce((prev,curr) => {prev[curr[0]]=curr[1];return prev;},{});\r\n\r\n        // Map and projection\r\n        var path = d3.geoPath();\r\n        var projection = d3.geoMercator()\r\n                            .scale(700)\r\n                            .center([0,20])\r\n                            .translate([w / 2 -100, h+220]);\r\n\r\n        // Data and color scale\r\n        var colorScale = d3.scaleLinear()\r\n            .domain([d3.min(data, d => parseInt(d[1].replace(',', ''))), d3.max(data, d => parseInt(d[1].replace(',', '')))])\r\n            .range([\"lightblue\", \"darkblue\"]);\r\n\r\n        const svg = d3.select(this.refs.chartHolder)\r\n                        .append(\"svg\")\r\n                        .attr(\"height\", h)\r\n                        .attr(\"width\", w);\r\n\r\n        const immigrationHelper = function(d){\r\n            if(d.properties.geounit in immigration_numbers){\r\n                return immigration_numbers[d.properties.geounit];\r\n            } else {\r\n                return \"unknown.\";\r\n            }\r\n        };\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", w/2-250)\r\n            .attr(\"y\", 50)\r\n            .attr(\"font-size\", 30)\r\n            .text(\"Immigration from non-EU countries to Europe 2018\")\r\n\r\n        svg.append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(europe_geo.features)\r\n        .enter()\r\n        .append(\"path\")\r\n            // draw each country\r\n            .attr(\"d\", d3.geoPath()\r\n                .projection(projection)\r\n            )\r\n            // set the color of each country\r\n            .attr(\"fill\", function (d) {\r\n                if(d.properties.geounit in immigration_numbers){\r\n                    let temp = parseInt(immigration_numbers[d.properties.geounit].replace(',',''));\r\n                    return colorScale(temp);\r\n                } else {\r\n                    return \"gray\";\r\n                }\r\n            })\r\n            .append(\"title\")\r\n            .text(d => `${d.properties.geounit}: ${immigrationHelper(d)}`);\r\n        \r\n        const legendWidth = 400;\r\n        const rectHeight = 30;\r\n        const legendSteps = 8;\r\n        const rectWidth = Math.ceil(legendWidth / (legendSteps-1));\r\n        const legendScale = d3.scaleLinear()\r\n            .domain([100000, legendSteps*100000])\r\n            .range([0, legendWidth]);\r\n        const legendAxis = d3.axisBottom(legendScale)\r\n            .ticks(8);\r\n        const legendData = [...Array(legendSteps).keys()].map(i => (i+1)*100000);\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${w/10}, ${200})`)\r\n            .call(legendAxis)\r\n            .selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter()\r\n                .append(\"rect\")\r\n                .attr(\"x\", d => legendScale(d)-rectWidth/2)\r\n                .attr(\"y\", -rectHeight)\r\n                .attr(\"width\", rectWidth)\r\n                .attr(\"height\", rectHeight)\r\n                .attr(\"fill\", d => colorScale(d))\r\n                .attr(\"transform\", `translate(${0}, ${1})`);\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"holder\" ref=\"chartHolder\">\r\n            <p>Source: <a target=\"_blank\" href=\"https://ec.europa.eu/eurostat\">https://ec.europa.eu/eurostat</a></p>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chloroplet from './components/choropleth_chart/choroplet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chloroplet/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}